import java.util.HashMap;
import java.util.Arrays;

public class Solution {
    public int[] dNums(int[] A, int B) {
        HashMap<Integer, Integer> hm = new HashMap<>();
        int[] res = new int[A.length - B + 1];
        int N = A.length;

        // Count the frequency of the first B elements
        for (int i = 0; i < B; i++) {
            int val = hm.getOrDefault(A[i], 0);
            hm.put(A[i], val + 1);
        }

        res[0] = hm.size();
        int s = 1;
        int e = B;

        // Slide the window and update the frequency count
        while (e < N) {
            int val = hm.get(A[s - 1]);
            if (val == 1) {
                hm.remove(A[s - 1]);
            } else {
                hm.put(A[s - 1], val - 1);
            }

            int newVal = hm.getOrDefault(A[e], 0);
            hm.put(A[e], newVal + 1);

            res[s] = hm.size();
            s++;
            e++;
        }

        return res;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        int[] A = {1, 2, 1, 3, 4, 3};
        int B = 3;

        int[] result = solution.dNums(A, B);
        System.out.println("Unique counts in each subarray of size " + B + ": " + Arrays.toString(result));
    }
}
