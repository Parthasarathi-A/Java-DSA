public class Solution {
    public boolean solve(ArrayList<Integer> A) {
        int n = A.size();
        int[] p = new int[n];
        p[0] = A.get(0);

        // Calculating the prefix sum
        for (int i = 1; i < n; i++) {
            p[i] = p[i - 1] + A.get(i);
        }

        // HashSet to store unique prefix sums
        HashSet<Integer> hs = new HashSet<>();
        for (int i = 0; i < n; i++) {
            if (p[i] == 0) {  // If the prefix sum is zero
                return true;
            } else {
                hs.add(p[i]);  // Add the prefix sum to HashSet
            }
        }

        // If the size of the HashSet is less than n, it means there is a duplicate prefix sum
        if (hs.size() != n) {
            return true;
        }

        return false;
    }
}
