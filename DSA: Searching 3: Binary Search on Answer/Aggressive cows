import java.util.Arrays;

public class Main {
    public boolean check(int A[], int x, int C) {
        int N = A.length;
        int count = 1;
        int last = 0;
        for (int i = 1; i < N; i++) {
            if (A[i] - A[last] >= x) {
                last = i;
                count++;
            }
        }
        if (count >= C) {
            return true;
        }
        return false;
    }

    public int solve(int[] A, int B) {
        int N = A.length;
        Arrays.sort(A); 
        int l = 1; 
        int ans = -1;
        int r = A[N - 1] - A[0]; // Maximum possible distance

        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (check(A, mid, B)) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        Main main = new Main();
        
        // Example input
        int[] A = {1, 2, 3, 4, 5}; // Positions of stalls
        int B = 3; // Number of cows

        // Output the result
        int result = main.solve(A, B);
        System.out.println("The largest minimum distance is: " + result);
    }
}
