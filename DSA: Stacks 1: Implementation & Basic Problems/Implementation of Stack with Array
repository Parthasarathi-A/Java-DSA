class Stack {
    private int[] A; // Array to store stack elements
    private int T; // Top of the stack

    // Constructor to initialize the stack
    public Stack(int size) {
        A = new int[size];
        T = -1; // Stack is initially empty
    }

    // Method to add an element to the stack
    public void push(int element) {
        A[++T] = element; // Directly add the element
    }

    // Method to remove and return the top element from the stack
    public int pop() {
        return A[T--];
    }

    // Method to return the top element without removing it
    public int top() {
        return A[T];
    }

    // Method to check if the stack is empty
    public boolean isEmpty() {
        return T == -1;
    }

    // Method to return the size of the stack
    public int size() {
        return T + 1;
    }

    // Main function to test the stack implementation
    public static void main(String[] args) {
        Stack stack = new Stack(5);

        stack.push(10);
        stack.push(20);
        stack.push(30);

        System.out.println("Top element is: " + stack.top());
        System.out.println("Stack size is: " + stack.size());

        System.out.println("Popped element is: " + stack.pop());
        System.out.println("Stack size is: " + stack.size());

        stack.pop();
        stack.pop();

        if (stack.isEmpty()) {
            System.out.println("Stack is Empty");
        }
    }
}
