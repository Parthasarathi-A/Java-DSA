import java.util.*;
public class Main {
    
    public static int partition(int[] arr) {
        int l = 1; // Left pointer starts after the pivot
        int r = arr.length - 1; // Right pointer starts from the end
        int p = arr[0]; // Pivot element is the first element

        while (l <= r) {
            // Move left pointer to the right while the element is less than or equal to the pivot
            if (arr[l] <= p) {
                l++;
            }
            // Move right pointer to the left while the element is greater than the pivot
            else if (arr[r] > p) {
                r--;
            }
            // Swap elements at left and right pointers
            else {
                int temp = arr[l];
                arr[l] = arr[r];
                arr[r] = temp;
                l++;
                r--;
            }
        }

        // Swap the pivot element with arr[r] to place it in the correct position
        int temp = arr[0];
        arr[0] = arr[r];
        arr[r] = temp;

        // Return the position of the pivot
        return r;
    }

    public static void main(String[] args) {
        int[] arr = {54, 26, 93, 17, 77, 31, 44, 55, 20};

        System.out.println("Array before partitioning: ");
        printArray(arr);

        // Call partition and get the pivot index
        int pivotIndex = partition(arr);

        System.out.println("Array after partitioning: ");
        printArray(arr);

        System.out.println("Pivot is at index: " + pivotIndex);
    }

    // Utility function to print the array
    public static void printArray(int[] arr) {
        for (int num : arr) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}
