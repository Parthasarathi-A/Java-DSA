import java.util.*;
public class Solution {
    public Integer majorityElement(final List<Integer> A) {
        int n = A.size();
        int maj_index = 0;
        int count = 1;
        
        // Step 1: Find the candidate for majority element
        for (int i = 1; i < n; i++) {
            if (count == 0) {
                maj_index = i;  // Assign new candidate
                count = 1;
            } 
            else if (A.get(i) == A.get(maj_index)) {
                count++;  // Same element, increment count
            } 
            else {
                count--;  // Different element, decrement count
            }
        }
        // Step 2: Verify if the candidate is actually a majority element
        int freq = 0;
        for (int i = 0; i < n; i++) {
            if (A.get(i) == A.get(maj_index)) {
                freq++;
            }
        }

        if (freq > n / 2) {
            return A.get(maj_index);  // Return the majority element
        } 
        else {
            System.out.println("No majority element found");
            return null;  // Indicating no majority found
        }
    }
    public static void main(String[] args) {
        Solution solution = new Solution();
        
        // Test case 1
        List<Integer> arr1 = Arrays.asList(1, 2, 3, 1, 1);
        Integer result1 = solution.majorityElement(arr1);
        if (result1 != null) {
            System.out.println("Majority element is: " + result1);
        }

        // Test case 2
        List<Integer> arr2 = Arrays.asList(1, 2, 3, 4, 5);
        Integer result2 = solution.majorityElement(arr2);
        if (result2 != null) {
            System.out.println("Majority element is: " + result2);
        }

        // Test case 3
        List<Integer> arr3 = Arrays.asList(3, 3, 4, 2, 3, 3, 3);
        Integer result3 = solution.majorityElement(arr3);
        if (result3 != null) {
            System.out.println("Majority element is: " + result3);
        }
    }
}
